apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"

buildscript {
    repositories {
        google()
        jcenter()
    }

    def dependenciesConfig = rootProject.extensions.getByName("ext")

    dependencies {
        classpath("com.google.firebase:firebase-appdistribution-gradle:1.4.1")
        classpath("androidx.navigation:navigation-safe-args-gradle-plugin:${dependenciesConfig.versions.navigation}")
    }
}

apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.appdistribution"
apply plugin: "androidx.navigation.safeargs.kotlin"
apply from: "${project.rootDir}/dependencies.gradle"


android {
    compileSdkVersion 29

    defaultConfig {
        applicationId = "net.lachlanmckee.linkcleaner"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode = System.getenv("BITRISE_BUILD_NUMBER")?.toInteger() ?: 1
        versionName = "0.0.1"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

        testOptions {
            execution 'ANDROIDX_TEST_ORCHESTRATOR'
        }

        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    signingConfigs {
        debug {
            storeFile file("src/debug/debug-keystore.jks")
            storePassword "key-store-password"
            keyAlias "debug-alias"
            keyPassword "key-password"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }

    buildFeatures {
        viewBinding = true
    }
}

dependencies {
    implementation(libs.kotlin)
    implementation(libs.appcompat)
    implementation(libs.coreKtx)
    implementation(libs.constraintLayout)
    implementation(libs.lifecycleExtensions)
    implementation(libs.lifecycleViewModelKtx)
    implementation(libs.lifecycleLiveDataKtx)

    implementation(libs.navigationFragmentKtx)
    implementation(libs.navigationUiKtx)

    implementation(libs.okHttp)
    implementation(libs.firebaseAnalytics)

    kapt(libs.daggerCompiler)
    kapt(libs.daggerAndroidProcessor)
    implementation(libs.dagger)
    implementation(libs.daggerAndroid)

    implementation libs.coroutinesCore

    implementation libs.timber

    testImplementation(testLibs.junit)

    debugImplementation(espressoLibs.fragmentTesting)
    androidTestImplementation(espressoLibs.junit)
    androidTestImplementation(espressoLibs.espressoCore)
    androidTestImplementation(espressoLibs.espressoIntents)
    androidTestImplementation(espressoLibs.runner)
    androidTestImplementation(espressoLibs.rules)
    androidTestImplementation(espressoLibs.navigation)
    androidTestUtil(espressoLibs.orchestrator)
}
